File    = table
Product = @product@
#*************************************************
# Starting Group definition
Group:

Flavor     = ANY
Qualifiers = ""
  Action = setup
       prodDir()
       setupEnv()
       setupRequired(cetbuildtools @CETBUILDTOOLS_VERSION@ @CETBUILDTOOLS_QUAL@)
       execute( "get-directory-name subdir '' ${UPS_PROD_FLAVOR}", UPS_ENV, ${UPS_PROD_NAME_UC}_FQ )
       fileTest( ${UPS_PROD_DIR}/${${UPS_PROD_NAME_UC}_FQ}, -d, "${UPS_PROD_DIR}/${${UPS_PROD_NAME_UC}_FQ} directory not found: SETUP ABORTED")
       exeActionRequired("setup__")
       setupRequired(root      @ROOT_VERSION@ )

Flavor     = ANY
Qualifiers = "a4"
  Action = setup
       prodDir()
       setupEnv()
       setupRequired(cetbuildtools @CETBUILDTOOLS_VERSION@ @CETBUILDTOOLS_QUAL@)
       # faking out unsetup
       envSet( ${UPS_PROD_NAME_UC}_FQ, "" )
       execute( "get-directory-name subdir a4 ${UPS_PROD_FLAVOR}", UPS_ENV, ${UPS_PROD_NAME_UC}_FQ )
       fileTest( ${UPS_PROD_DIR}/${${UPS_PROD_NAME_UC}_FQ}, -d, "${UPS_PROD_DIR}/${${UPS_PROD_NAME_UC}_FQ} directory not found: SETUP ABORTED")
       exeActionRequired("setup__")
       setupRequired(root      @ROOT_VERSION@ -q gcc46)

Flavor     = ANY
Qualifiers = "nova"
  Action = setup
       prodDir()
       setupEnv()
       setupRequired(cetbuildtools @CETBUILDTOOLS_VERSION@ @CETBUILDTOOLS_QUAL@)
       # faking out unsetup
       envSet( ${UPS_PROD_NAME_UC}_FQ, "" )
       execute( "get-directory-name subdir nova ${UPS_PROD_FLAVOR}", UPS_ENV, ${UPS_PROD_NAME_UC}_FQ )
       fileTest( ${UPS_PROD_DIR}/${${UPS_PROD_NAME_UC}_FQ}, -d, "${UPS_PROD_DIR}/${${UPS_PROD_NAME_UC}_FQ} directory not found: SETUP ABORTED")
       exeActionRequired("setup__")
       setupRequired(root      @ROOT_VERSION@ -q nova)

Flavor     = ANY
Qualifiers = "mu2e"
  Action = setup
       prodDir()
       setupEnv()
       setupRequired(cetbuildtools @CETBUILDTOOLS_VERSION@ @CETBUILDTOOLS_QUAL@)
       # faking out unsetup
       envSet( ${UPS_PROD_NAME_UC}_FQ, "" )
       execute( "get-directory-name subdir nova ${UPS_PROD_FLAVOR}", UPS_ENV, ${UPS_PROD_NAME_UC}_FQ )
       fileTest( ${UPS_PROD_DIR}/${${UPS_PROD_NAME_UC}_FQ}, -d, "${UPS_PROD_DIR}/${${UPS_PROD_NAME_UC}_FQ} directory not found: SETUP ABORTED")
       exeActionRequired("setup__")
       setupRequired(root      @ROOT_VERSION@ -q mu2e)

Flavor     = ANY
Qualifiers = "a4:debug"
  Action = setup
       prodDir()
       setupEnv()
       setupRequired(cetbuildtools @CETBUILDTOOLS_VERSION@ @CETBUILDTOOLS_QUAL@)
       # faking out unsetup
       envSet( ${UPS_PROD_NAME_UC}_FQ, "" )
       execute( "get-directory-name subdir a4.debug ${UPS_PROD_FLAVOR}", UPS_ENV, ${UPS_PROD_NAME_UC}_FQ )
       fileTest( ${UPS_PROD_DIR}/${${UPS_PROD_NAME_UC}_FQ}, -d, "${UPS_PROD_DIR}/${${UPS_PROD_NAME_UC}_FQ} directory not found: SETUP ABORTED")
       exeActionRequired("setup__")
       setupRequired(root      @ROOT_VERSION@ -q gcc46:debug)

Flavor     = ANY
Qualifiers = "nova:debug"
  Action = setup
       prodDir()
       setupEnv()
       setupRequired(cetbuildtools @CETBUILDTOOLS_VERSION@ @CETBUILDTOOLS_QUAL@)
       # faking out unsetup
       envSet( ${UPS_PROD_NAME_UC}_FQ, "" )
       execute( "get-directory-name subdir nova.debug ${UPS_PROD_FLAVOR}", UPS_ENV, ${UPS_PROD_NAME_UC}_FQ )
       fileTest( ${UPS_PROD_DIR}/${${UPS_PROD_NAME_UC}_FQ}, -d, "${UPS_PROD_DIR}/${${UPS_PROD_NAME_UC}_FQ} directory not found: SETUP ABORTED")
       exeActionRequired("setup__")
       setupRequired(root      @ROOT_VERSION@ -q nova:debug)

Flavor     = ANY
Qualifiers = "mu2e:debug"
  Action = setup
       prodDir()
       setupEnv()
       setupRequired(cetbuildtools @CETBUILDTOOLS_VERSION@ @CETBUILDTOOLS_QUAL@)
       # faking out unsetup
       envSet( ${UPS_PROD_NAME_UC}_FQ, "" )
       execute( "get-directory-name subdir nova.debug ${UPS_PROD_FLAVOR}", UPS_ENV, ${UPS_PROD_NAME_UC}_FQ )
       fileTest( ${UPS_PROD_DIR}/${${UPS_PROD_NAME_UC}_FQ}, -d, "${UPS_PROD_DIR}/${${UPS_PROD_NAME_UC}_FQ} directory not found: SETUP ABORTED")
       exeActionRequired("setup__")
       setupRequired(root      @ROOT_VERSION@ -q mu2e:debug)

Common:
  Action = setup__
    envSet(${UPS_PROD_NAME_UC}_VERSION, @version@)
    prodDir( _FQ_DIR, ${${UPS_PROD_NAME_UC}_FQ} )

    # faking out unsetup
    envSet(${UPS_PROD_NAME_UC}_INC,"")
    execute( "find-path include ${${UPS_PROD_NAME_UC}_FQ_DIR} ${UPS_PROD_DIR}", UPS_ENV, ${UPS_PROD_NAME_UC}_INC)
    # faking out unsetup
    envSet(${UPS_PROD_NAME_UC}_LIB,"")
    execute( "find-path lib ${${UPS_PROD_NAME_UC}_FQ_DIR} ${UPS_PROD_DIR}", UPS_ENV, ${UPS_PROD_NAME_UC}_LIB)
    pathPrepend(LD_LIBRARY_PATH, ${${UPS_PROD_NAME_UC}_LIB})

    # add the bin directory to the path if it exists
    pathPrepend(PATH, ${UPS_PROD_DIR}/bin )
    pathPrepend(PATH, ${${UPS_PROD_NAME_UC}_FQ_DIR}/bin )
    # dropit -E removes non-existent directories
    Execute(dropit -E, NO_UPS_ENV, PATH)

    # uncomment or add to this list as relevant
    setupRequired(cmake)
    setupRequired(cppunit   @CPPUNIT_VERSION@ @CPPUNIT_QUAL@)
    setupRequired(gccxml    @GCCXML_VERSION@ @GCCXML_QUAL@)
    setupRequired(libsigcpp @LIBSIGCPP_VERSION@ @LIBSIGCPP_QUAL@)
    setupRequired(clhep     @CLHEP_VERSION@ @CLHEP_QUAL@)
    setupRequired(messagefacility @MESSAGEFACILITY_VERSION@ @MESSAGEFACILITY_QUAL@)
    setupRequired(fhiclcpp  @FHICLCPP_VERSION@ @FHICLCPP_QUAL@)
    setupRequired(cpp0x     @CPP0X_VERSION@ @CPP0X_QUAL@)
    setupRequired(cetlib    @CETLIB_VERSION@ @CETLIB_QUAL@)
    setupRequired(boost     @BOOST_VERS@ @BOOST_QUAL@)
    setupRequired(sqlite    @SQLITE_VERS@ @SQLITE_QUAL@)
    setupRequired(gcc       @GCC_VERSION@ @GCC_QUAL@)

End:
# End Group definition
#*************************************************
