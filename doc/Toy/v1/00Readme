This example has the following classes:

Event:  the empty shell of an event class.
        (no implementation provided)
Config: the empty shell of a runtime configuration class.
        (no implementation provided)

Event data classes:
ToyMCTrack.hh  - Generated tracks
ToyMCHit.hh    - hit made by G4
ToyDigi.hh     - digis made by a separate module.

Module classes:
ToyGenerator  - producer
ToyG4         - producer
ToyDigitizer  - producer
MyAnalyzer    - analyzer

It also has two configuration files for the geometry:

geom.conf  - describes the targets
geom2.conf - overrides one parameter of geom.conf


Here is my idea for the base example job:

There is one initialization step:

1) Instantiate the geometry manager using the file
   geom.conf;
   I have not yet made a toy geometry system for this.
   Let me if you need it.

Here is the event the event loop;
1) Input module: create an empty event.

2) ToyGenerator:
    - Adds a collection of ToyMCTrack named "ToyTracks1".

3) ToyG4
    - Adds two collections of ToyMCHit named "ToyHits1"
      and "ToyHits2".

4) ToyDigitizer
     - Adds one collection of digitized hits.

5) MyAnalysis
     - Looks at various things in the event.

Here are my questions:

1) What does geom.conf look like in your runtime
   configuration language.

2) What does geom2.conf look like?

3) How does one specify the event loop given above.
   In this example I have not created cofigurations
   for each module.  Lets give them names here:
      EmptyEvent   - empty_1.conf
      ToyGenerator - generator_1.conf
      ToyG4        - g4_1.conf
      ToyDigitizer - digi_1.conf
      MyAnalysis   - analysis_1.conf

